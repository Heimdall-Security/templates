version: '{{composeVersion}}'
networks:
  {{serverExposedNetwork}}:
    external: true
  heimdall-network-{{deploymentId}}:
volumes:
  mongo_data-{{deploymentId}}:

services:
  mongo-{{deploymentId}}:
    image: '{{datastoreServer.image.imageRegistry}}/{{datastoreServer.image.imageName}}:{{datastoreServer.image.tag}}'
    restart: {{deployment.restartPolicy}}
    container_name: mongo-{{deploymentId}}
    networks:
      - heimdall-network-{{deploymentId}}
    volumes:
      - 'mongo_data-{{deploymentId}}:/data/db'

  consul-{{deploymentId}}:
    image: consul
    container_name: consul-{{deploymentId}}
    restart: {{consul.restartPolicy}}
    networks:
      - heimdall-network-{{deploymentId}}
  heimdall-api-gateway-{{deploymentId}}:
    image: '{{gateway.image.imageRegistry}}/{{gateway.image.imageName}}:{{gateway.image.tag}}'
    container_name: heimdall-api-gateway-{{deploymentId}}
    restart: {{gateway.restartPolicy}}
    networks:
      - heimdall-network-{{deploymentId}}
      - {{serverExposedNetwork}}
    labels:
      - traefik.enable=true
      - traefik.http.routers.heimdall-api-webrouter-{{deploymentId}}.entrypoints=http
      - traefik.http.routers.heimdall-api-webrouter-{{deploymentId}}.rule=Host(`{{deployment.accessLink}}`)&&PathPrefix(`/api`)
      - traefik.http.middlewares.heimdall-web-websecure-{{deploymentId}}-redirect.redirectscheme.scheme=https
      - traefik.http.routers.heimdall-api-webrouter-{{deploymentId}}.middlewares=heimdall-web-websecure-{{deploymentId}}-redirect
      - traefik.http.routers.heimdall-api-websecurerouter-{{deploymentId}}.entrypoints=https
      - traefik.http.routers.heimdall-api-websecurerouter-{{deploymentId}}.rule=Host(`{{deployment.accessLink}}`)&&PathPrefix(`/api`)
      - traefik.http.routers.heimdall-api-websecurerouter-{{deploymentId}}.tls=true
      - traefik.http.routers.heimdall-api-websecurerouter-{{deploymentId}}.service=heimdall-api-gateway-{{deploymentId}}
      - traefik.http.services.heimdall-api-gateway-{{deploymentId}}.loadbalancer.server.port=8080
      - traefik.docker.network={{exposedNetwork}}
  {{#each microservices}}
  {{deploymentPrefix}}-{{deploymentId}}:
    image: '{{image.imageRegistry}}/{{image.imageName}}:{{image.tag}}'
    container_name: {{serviceName}}-{{deploymentId}}
    restart: {{restartPolicy}}
    env_file:
      - stack.env
    networks:
      - heimdall-network-{{deploymentId}}
  {{/each}}